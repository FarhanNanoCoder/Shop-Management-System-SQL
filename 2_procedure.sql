DROP PROCEDURE UPDATE_TOTAL_PAYMENT;

DROP PROCEDURE SET_RECORD_AMOUNT;


CREATE OR REPLACE PROCEDURE UPDATE_TOTAL_PAYMENT(
    ID PAYMENT.ID%TYPE,
    AMOUNT RECORD.AMOUNT%TYPE
) IS
    PAY_ID PAYMENT.ID%TYPE := ID;
    AMO RECORD.AMOUNT%TYPE := AMOUNT;
    TOT PAYMENT.TOTAL%TYPE;
BEGIN
    SELECT TOTAL INTO TOT
    FROM PAYMENT P
    WHERE P.ID = PAY_ID;

    IF (TOT IS NULL) THEN
    TOT:= AMO;
    ELSE
    TOT := TOT + AMO;
    END IF;

    DBMS_OUTPUT.PUT_LINE('ID AMOUNT TOTAL '||PAY_ID||' '||AMO||' '||TOT);

    UPDATE PAYMENT P 
    SET P.TOTAL  = TOT
    WHERE P.ID = PAY_ID;

END;
/
SHOW ERRORS;


CREATE OR REPLACE PROCEDURE SET_RECORD_AMOUNT(
    PAY_ID IN RECORD.PAY_ID%TYPE,
    PRO_ID  IN RECORD.PRO_ID%TYPE
) IS

    PR RECORD.PRO_ID%TYPE := PRO_ID;
    PA RECORD.PAY_ID%TYPE := PAY_ID;
    PRO_PRICE  PRODUCT.PRICE%TYPE;
    REC_QUANTITY RECORD.QUANTITY%TYPE;
    REC_AMOUNT RECORD.AMOUNT%TYPE;

BEGIN 
    DBMS_OUTPUT.PUT_LINE('PRO_ID: '||PRO_ID||' PAY_ID: '||PAY_ID);

    SELECT R.QUANTITY,P.PRICE 
    INTO REC_QUANTITY,PRO_PRICE
    FROM RECORD R JOIN PRODUCT P
    ON (R.PAY_ID = PA AND R.PRO_ID = PR AND R.PRO_ID = P.ID);
    
    REC_AMOUNT := PRO_PRICE * REC_QUANTITY; 

    DBMS_OUTPUT.PUT_LINE('QUANTIYY :'||REC_QUANTITY || ' PRICE:'||PRO_PRICE
    ||' AMOUNT:'||REC_AMOUNT);

    UPDATE RECORD R
    SET AMOUNT = REC_AMOUNT
    WHERE R.PAY_ID = PA AND R.PRO_ID = PR;

    UPDATE_TOTAL_PAYMENT(PA,REC_AMOUNT);
END;
/
SHOW ERRORS;